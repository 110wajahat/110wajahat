{"version":3,"file":"static/js/872.6d65db2a.chunk.js","mappings":"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","sources":["Screens/Proposals/RegularTables/Examples/TableHover.js","Screens/Proposals/RegularTables/index.js","Screens/Proposals/index.js"],"sourcesContent":["import React from 'react';\nimport { Table } from 'reactstrap';\n\nexport default class TableHover extends React.Component {\n\n data = [\n   {\n     date: 1,\n     client:\"123\",\n     type: \"John\",\n     methodology: \"28/8/2023\"\n   },\n   {\n    date: 1,\n    client:\"123\",\n    type: \"John\",\n    methodology: \"28/8/2023\"\n  },\n  {\n    date: 1,\n    client:\"123\",\n    type: \"John\",\n    methodology: \"28/8/2023\"\n  },\n  {\n    date: 1,\n    client:\"123\",\n    type: \"John\",\n    methodology: \"28/8/2023\"\n  },\n  {\n    date: 1,\n    client:\"123\",\n    type: \"John\",\n    methodology: \"28/8/2023\"\n  },\n ]\n\n  renderRows = () => {\n  return  this.data.map(v=>{\n      return(\n        <tr onClick={()=>{\n          if(this.props.onPress){\n            this.props.onPress()\n          }\n        }} >\n        <th scope=\"row\">{v.date}</th>\n        <td>{v.client}</td>\n        <td>{v.type}</td>\n        <td>{v.methodology}</td>\n      </tr>\n      )\n    })\n\n  }\n\n  render() {\n    return (\n      <Table hover className=\"mb-0\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Client Name</th>\n            <th>Type</th>\n            <th>Methodology</th>\n          </tr>\n        </thead>\n        <tbody>\n         {this.renderRows()}\n        </tbody>\n      </Table>\n    );\n  }\n}\n","import React, { Fragment, useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport {\n    Row, Col,\n    Card, CardBody,\n    CardTitle,\n    NavLink\n} from 'reactstrap';\n\nimport PageTitle from '../../../Layout/AppMain/PageTitle';\nimport TableHover from './Examples/TableHover';\nimport AddInvoiceModal from '../../Components/Modal/AddInvoiceModal';\nimport AddProposalModal from '../../Components/Modal/AddProposalModal';\nimport EditProposalModal from '../../Components/Modal/EditProposalModal';\n\n\nconst RegularTables = (props) => {\n\n    const [show, setshow] = useState(\"all\")\n\n    var addProposalRef = null;\n    var editProposalRef = null;\n\n   const getHeading = () => {\n        if(show == \"all\"){\n            return \"Proposal Tracker\";\n        }\n        else if(show == \"active\"){\n            return \"Active Proposals\";\n        }\n        else if(show == \"accepted\"){\n            return \"Accepted Proposals\";\n        }\n        else if(show == \"pending\"){\n            return \"Pending Proposals\";\n        }\n        else if(show == \"rejected\"){\n            return \"Rejected Proposals\";\n        }\n    }\n\n    return (\n        <Fragment>\n            <TransitionGroup>\n                <CSSTransition component=\"div\" appear={true}\n                    timeout={0} enter={false} exit={false}>\n                    <div>\n                        <AddProposalModal ref={r => addProposalRef = r} />\n                        <EditProposalModal ref={r => editProposalRef = r} />\n                        <PageTitle\n                            heading={getHeading()}\n                            // subheading=\"Tables are the backbone of almost all web applications.\"\n                            icon=\"pe-7s-drawer icon-gradient bg-happy-itmeo\"\n                            onAddPress={() => {\n                                addProposalRef.toggle()\n                            }}\n                        />\n                        <div>\n                            <Row>\n                                {(show == \"all\"  || show == \"active\") && <Col lg=\"12\">\n                                    <Card className=\"main-card mb-3\">\n                                        <CardBody>\n                                            <div class=\"d-flex flex-row justify-content-between\" >\n                                                <CardTitle>Active</CardTitle>\n                                                    {show != \"all\"?<NavLink onClick={()=>{setshow(\"all\")}} href=\"#\">View All Proposals</NavLink>:<NavLink onClick={()=>{setshow(\"active\")}} href=\"#\">View More</NavLink>}\n                                            </div>\n                                            <TableHover onPress={()=>{\n                                                editProposalRef.toggle()\n                                            }} />\n                                        </CardBody>\n                                    </Card>\n                                </Col>}\n                                {(show == \"all\"  || show == \"accepted\") && <Col lg=\"12\">\n                                    <Card className=\"main-card mb-3\">\n                                        <CardBody>\n                                        <div class=\"d-flex flex-row justify-content-between\" >\n                                                <CardTitle>Accepted</CardTitle>\n                                                {show != \"all\"?<NavLink onClick={()=>{setshow(\"all\")}} href=\"#\">View All Proposals</NavLink>:<NavLink onClick={()=>{setshow(\"accepted\")}} href=\"#\">View More</NavLink>}\n                                            </div>\n                                            <TableHover onPress={()=>{\n                                                editProposalRef.toggle()\n                                            }} />\n                                        </CardBody>\n                                    </Card>\n                                </Col>}\n                                {(show == \"all\"  || show == \"pending\") &&<Col lg=\"12\">\n                                    <Card className=\"main-card mb-3\">\n                                        <CardBody>\n                                        <div class=\"d-flex flex-row justify-content-between\" >\n                                                <CardTitle>Pending</CardTitle>\n                                                {show != \"all\"?<NavLink onClick={()=>{setshow(\"all\")}} href=\"#\">View All Proposals</NavLink>:<NavLink onClick={()=>{setshow(\"pending\")}} href=\"#\">View More</NavLink>}\n                                            </div>\n                                            <TableHover onPress={()=>{\n                                                editProposalRef.toggle()\n                                            }} />\n                                        </CardBody>\n                                    </Card>\n                                </Col>}\n                               {(show == \"all\"  || show == \"rejected\") && <Col lg=\"12\">\n                                    <Card className=\"main-card mb-3\">\n                                        <CardBody>\n                                             <div class=\"d-flex flex-row justify-content-between\" >\n                                                <CardTitle>Rejected</CardTitle>\n                                                {show != \"all\"?<NavLink onClick={()=>{setshow(\"all\")}} href=\"#\">View All Proposals</NavLink>:<NavLink onClick={()=>{setshow(\"rejected\")}} href=\"#\">View More</NavLink>}\n                                            </div>\n                                            <TableHover onPress={()=>{\n                                                editProposalRef.toggle()\n                                            }} />\n                                        </CardBody>\n                                    </Card>\n                                </Col>}\n                            </Row>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </TransitionGroup>\n        </Fragment>\n    );\n};\n\nexport default RegularTables;\n","import React, {Fragment} from 'react';\nimport {Route} from 'react-router-dom';\n\n\nimport RegularTables from './RegularTables';\n\n// Layout\n\nimport AppHeader from '../../Layout/AppHeader/';\nimport AppSidebar from '../../Layout/AppSidebar/';\nimport AppFooter from '../../Layout/AppFooter/';\n\nconst Proposals = ({match}) => {\n    \n    return(\n    <Fragment>\n        <AppHeader/>\n        <div className=\"app-main\">\n            <AppSidebar/>\n            <div className=\"app-main__outer\">\n                <div className=\"app-main__inner\">\n\n                    {/* Tables */}\n\n                    <Route path={`${match.url}`} component={RegularTables}/>\n                </div>\n                {/* <AppFooter/> */}\n            </div>\n        </div>\n    </Fragment>\n);\n}\nexport default Proposals;"],"names":["TableHover","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","data","date","client","type","methodology","renderRows","map","v","_jsxs","onClick","props","onPress","children","_jsx","scope","_createClass","key","value","Table","hover","className","this","React","_useState","useState","_useState2","_slicedToArray","show","setshow","addProposalRef","editProposalRef","Fragment","TransitionGroup","CSSTransition","component","appear","timeout","enter","exit","AddProposalModal","ref","r","EditProposalModal","PageTitle","heading","icon","onAddPress","toggle","Row","Col","lg","Card","CardBody","class","CardTitle","NavLink","href","_ref","match","AppHeader","AppSidebar","Route","path","url","RegularTables"],"sourceRoot":""}